version: 2
dependencies:
  pre:
  - curl https://selenium-release.storage.googleapis.com/3.3/selenium-server-standalone-3.3.1.jar > selenium-server-standalone.jar
  - curl https://chromedriver.storage.googleapis.com/2.28/chromedriver_linux64.zip | gzip -dc > chromedriver
  - chmod +x chromedriver
  - 'java -jar selenium-server-standalone.jar -trustAllSSLCertificates -Dwebdriver.chrome.driver=chromedriver':
      background: true
  - google-chrome --version
  - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
  - sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb stable main" >> /etc/apt/sources.list.d/google.list'
  - sudo apt-get update
  - sudo apt-get --only-upgrade install google-chrome-stable
  - google-chrome --version
  - npm install -g nightwatch
  - nightwatch --version

test:
  override:
    - nightwatch --group mobile --env stage

jobs:
  build:
    docker:
      - image: circleci/node:7.10
      - image: karthikiyengar/node-nightwatch:0.0.1

    working_directory: ~/website/

    steps:
      - checkout:
          path: ~/website/

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-

      - run:
          name: Install packages
          command: |
            npm install

      - run:
          name: Test
          command: |
            npm run test

      - run:
          name: Nightwatch Tests
          command: |
            npm run nightwatch

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run:
          name: Build project
          command: |
            if [ "${CIRCLE_BRANCH}" == "release"]; then
              npm run build
            else
              STAGING=true npm run build
            fi

      - deploy:
          name: Deploy to Firebase if tests pass
          command: |
            case "${CIRCLE_BRANCH}" in
              "master")
              ./node_modules/.bin/firebase use website-staging
                ./node_modules/.bin/firebase deploy --token=$FIREBASE_TOKEN
              ;;
              "release")
                ./node_modules/.bin/firebase use website-production
                ./node_modules/.bin/firebase deploy --token=$FIREBASE_TOKEN
              ;;
              *) echo "No deployment target available for branch ${CIRCLE_BRANCH}"; ;;
            esac;
